# Generated by Django 5.2 on 2025-04-18 04:07

import django.db.models.deletion
import mptt.fields
import uuid_utils.compat
from django.db import migrations, models

from tools.models import ToolModule


def insert_default_data(apps, schema_editor):
    # 创建一个根模块（没有父节点）
    ToolModule.objects.create(id='root', name='根目录', user_id='f0dd8f71-e4ee-11ee-8c84-a8a1595801ab')


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ToolModule',
            fields=[
                ('id', models.CharField(editable=False, max_length=64, primary_key=True, serialize=False,
                                        verbose_name='主键id')),
                ('name', models.CharField(max_length=64, verbose_name='文件夹名称')),
                ('workspace_id',
                 models.CharField(db_index=True, default='default', max_length=64, verbose_name='工作空间id')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent',
                 mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            related_name='children', to='tools.toolmodule')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user',
                                           verbose_name='用户id')),
            ],
            options={
                'db_table': 'tool_module',
            },
        ),
        migrations.RunPython(insert_default_data),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id',
                 models.UUIDField(default=uuid_utils.compat.uuid7, editable=False, primary_key=True, serialize=False,
                                  verbose_name='主键id')),
                ('name', models.CharField(max_length=64, verbose_name='函数名称')),
                ('desc', models.CharField(max_length=128, verbose_name='描述')),
                ('code', models.CharField(max_length=102400, verbose_name='python代码')),
                ('input_field_list', models.JSONField(default=list, verbose_name='输入字段列表')),
                ('init_field_list', models.JSONField(default=list, verbose_name='启动字段列表')),
                ('icon', models.CharField(default='/ui/favicon.ico', max_length=256, verbose_name='函数库icon')),
                ('is_active', models.BooleanField(default=True)),
                ('scope',
                 models.CharField(choices=[('SHARED', '共享'), ('WORKSPACE', '工作空间可用')], default='WORKSPACE',
                                  max_length=20, verbose_name='可用范围')),
                ('tool_type',
                 models.CharField(choices=[('INTERNAL', '内置'), ('CUSTOM', '自定义')], default='CUSTOM',
                                  max_length=20, verbose_name='函数类型', db_index=True)),
                ('template_id', models.UUIDField(default=None, null=True, verbose_name='模版id')),
                ('workspace_id', models.CharField(default='default', max_length=64, verbose_name='工作空间id', db_index=True)),
                ('init_params', models.CharField(max_length=102400, null=True, verbose_name='初始化参数')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user',
                                           verbose_name='用户id')),
                ('module',
                 models.ForeignKey(default='root', on_delete=django.db.models.deletion.CASCADE, to='tools.toolmodule',
                                   verbose_name='模块id')),
            ],
            options={
                'db_table': 'tool',
            },
        ),
    ]
